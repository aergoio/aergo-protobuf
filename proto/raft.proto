syntax = "proto3";

package types;
//option go_package = "github.com/aergoio/aergo/v2/types";

import "p2p.proto";

// cluster member for raft consensus 
enum MembershipChangeType {
  ADD_MEMBER = 0;
  REMOVE_MEMBER = 1;
}

message MemberAttr {
  uint64 ID = 1;
  string name = 2;
  string address = 3;
  bytes  peerID = 4;
}

message MembershipChange {
  MembershipChangeType type = 1;
  uint64 requestID = 2;
  MemberAttr attr = 3;
}

message MembershipChangeReply {
  MemberAttr attr = 1;
}

message HardStateInfo {
  uint64 term = 1;
  uint64 commit = 2;
}

// data types for raft support
// GetClusterInfoRequest
message GetClusterInfoRequest {
  bytes bestBlockHash = 1;
}

message GetClusterInfoResponse {
  bytes chainID = 1;
  uint64 clusterID = 2;
  string error = 3;
  repeated MemberAttr mbrAttrs = 4;
  uint64 bestBlockNo = 5;             // best block number of this node
  HardStateInfo hardStateInfo = 6;    // hardstate corresponding to bestblockhash of requester
}

enum ConfChangeState {
	CONF_CHANGE_STATE_PROPOSED = 0;
	CONF_CHANGE_STATE_SAVED = 1;
	CONF_CHANGE_STATE_APPLIED = 2;
}

message ConfChangeProgress {
	ConfChangeState State = 1;
	string Err = 2;   
	repeated MemberAttr Members = 3;
}


// SnapshotResponse is response message of receiving peer
message SnapshotResponse {
    ResultStatus status = 1;
    string message = 2;
}